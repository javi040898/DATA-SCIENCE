library(arules)
library(arulesViz)
muestra<-Matrix(c(1,1,0,1,1, 1,1,1,1,0, 1,1,0,1,0, 1,0,1,1,0, 1,1,0,0,0, 0,0,0,1,0),6,5,byrow=TRUE,dimnames=list(c("Suceso1","Suceso2","Suceso3","Suceso4","Suceso5","Suceso6"),c("Pan","Agua","Cafe","Leche","Naranjas")),sparse=TRUE)
muestrangCMatrix<-as(muestra,"nsparseMatrix")
transpmuestratrangCMatrix<-t(muestrangCMatrix)
transacciones<-as(transpmuestratrangCMatrix,"transactions")
summary(transacciones)
inspect(asociaciones)
asociacionesap<-apriori(transacciones,parameter=list(support=0.5,confidence=0.8))
itemsets <- eclat(transacciones,
parameter = list(supp = 0.5, maxlen = 5))
## Create rules from the itemsets
rules <- ruleInduction(itemsets, transacciones, confidence = 0.8)
inspect(rules)
plot(asociacionesap,method = "graph")
plot(asociacionesTxt,method = "two-key plot")
muestrangCMatrix
muestra
transpmuestratrangCMatrix
transacciones
summary(transaccionesc)
summary(transacciones)
inspect(transacciones)
Sweave("Memoria.Rnw")
Sweave("Memoria.Rnw")
tools::texi2pdf("Memoria.tex")
Sweave("Memoria.Rnw")
tools::texi2pdf("Memoria.tex")
q()
Sweave("Memoria.Rnw")
Sweave("Memoria.Rnw")
install.packages("pastecs")
install.packages("xlsx")
install.packages("arulesViz")
library(arulesViz)
library(pastecs)
library(xlsx)
library(arules)
#Leer datos del excel
datosExcelP<-Matrix(as.matrix(read.xlsx("papeleria.xlsx", 1)),byrow=TRUE, sparse=TRUE )
datosExcelngCMatrixP<-as(datosExcelP,"nsparseMatrix")
trspDatosExcelngCMatrixP<-t(datosExcelngCMatrixP)
trspDatosExcelngCMatrixP
#Algoritmo a priori con excel
transaccionesExcelP<-as(trspDatosExcelngCMatrixP,"transactions")
summary(transaccionesExcelP)
asociacionesExcelP<-apriori(transaccionesExcelP, parameter=list(support=0.5, confidence=0.8))
inspect(asociacionesExcelP) #Para ver el resultado
itemsetsT <- eclat(transaccionesExcelT,
parameter = list(supp = 0.5, maxlen = 5))
## Create rules from the itemsets
rulesT <- ruleInduction(itemsetsT, transaccionesExcelT, confidence = 0.8)
inspect(rulesT)
#plot(asociacionesTxt)
plot(asociacionesTxt,method = "graph")
plot(asociacionesTxt,method = "two-key plot")
Sweave("Memoria.Rnw")
tools::texi2pdf("Memoria.tex")
Sweave("Memoria.Rnw")
tools::texi2pdf("Memoria.tex")
install.packages("arules")
install.packages("arulesViz")
library(arules)
library(arulesViz)
muestra<-Matrix(c(1,1,0,1,1, 1,1,1,1,0, 1,1,0,1,0, 1,0,1,1,0, 1,1,0,0,0, 0,0,0,1,0),6,5,byrow=TRUE,dimnames=list(c("Suceso1","Suceso2","Suceso3","Suceso4","Suceso5","Suceso6"),c("Pan","Agua","Cafe","Leche","Naranjas")),sparse=TRUE)
muestrangCMatrix<-as(muestra,"nsparseMatrix")
transpmuestratrangCMatrix<-t(muestrangCMatrix)
transacciones<-as(transpmuestratrangCMatrix,"transactions")
summary(transacciones)
inspect(transacciones)
asociacionesap<-apriori(transacciones,parameter=list(support=0.5,confidence=0.8))
inspect(asociacionesap)
itemsets <- eclat(transacciones, parameter = list(supp = 0.5, maxlen = 5))
rules <- ruleInduction(itemsets, transacciones, confidence = 0.8)
inspect(rules)
plot(asociacionesap,method = "graph")
plot(asociacionesTxt,method = "two-key plot")
install.packages("arules")
install.packages("arulesViz")
library(arules)
library(arulesViz)
muestra<-Matrix(c(1,1,0,1,1, 1,1,1,1,0, 1,1,0,1,0, 1,0,1,1,0, 1,1,0,0,0, 0,0,0,1,0),6,5,byrow=TRUE,dimnames=list(c("Suceso1","Suceso2","Suceso3","Suceso4","Suceso5","Suceso6"),c("Pan","Agua","Cafe","Leche","Naranjas")),sparse=TRUE)
muestrangCMatrix<-as(muestra,"nsparseMatrix")
transpmuestratrangCMatrix<-t(muestrangCMatrix)
transacciones<-as(transpmuestratrangCMatrix,"transactions")
summary(transacciones)
inspect(transacciones)
asociacionesap<-apriori(transacciones,parameter=list(support=0.5,confidence=0.8))
inspect(asociacionesap)
itemsets <- eclat(transacciones, parameter = list(supp = 0.5, maxlen = 5))
rules <- ruleInduction(itemsets, transacciones, confidence = 0.8)
inspect(rules)
#plot(asociacionesap,method = "graph")
plot(asociacionesTxt,method = "two-key plot")
install.packages("arules")
install.packages("arulesViz")
library(arules)
library(arulesViz)
muestra<-Matrix(c(1,1,0,1,1, 1,1,1,1,0, 1,1,0,1,0, 1,0,1,1,0, 1,1,0,0,0, 0,0,0,1,0),6,5,byrow=TRUE,dimnames=list(c("Suceso1","Suceso2","Suceso3","Suceso4","Suceso5","Suceso6"),c("Pan","Agua","Cafe","Leche","Naranjas")),sparse=TRUE)
muestrangCMatrix<-as(muestra,"nsparseMatrix")
transpmuestratrangCMatrix<-t(muestrangCMatrix)
transacciones<-as(transpmuestratrangCMatrix,"transactions")
summary(transacciones)
inspect(transacciones)
asociacionesap<-apriori(transacciones,parameter=list(support=0.5,confidence=0.8))
inspect(asociacionesap)
itemsets <- eclat(transacciones, parameter = list(supp = 0.5, maxlen = 5))
rules <- ruleInduction(itemsets, transacciones, confidence = 0.8)
inspect(rules)
#plot(asociacionesap,method = "graph")
plot(asociacionesap,method = "two-key plot")
install.packages("arules")
install.packages("arulesViz")
library(arules)
library(arulesViz)
muestra<-Matrix(c(1,1,0,1,1, 1,1,1,1,0, 1,1,0,1,0, 1,0,1,1,0, 1,1,0,0,0, 0,0,0,1,0),6,5,byrow=TRUE,dimnames=list(c("Suceso1","Suceso2","Suceso3","Suceso4","Suceso5","Suceso6"),c("Pan","Agua","Cafe","Leche","Naranjas")),sparse=TRUE)
muestrangCMatrix<-as(muestra,"nsparseMatrix")
transpmuestratrangCMatrix<-t(muestrangCMatrix)
transacciones<-as(transpmuestratrangCMatrix,"transactions")
summary(transacciones)
inspect(transacciones)
asociacionesap<-apriori(transacciones,parameter=list(support=0.5,confidence=0.8))
inspect(asociacionesap)
itemsets <- eclat(transacciones, parameter = list(supp = 0.5, maxlen = 5))
rules <- ruleInduction(itemsets, transacciones, confidence = 0.8)
inspect(rules)
#plot(asociacionesap,method = "graph")
plot(asociacionesap,method = "two-key plot")
install.packages("arules")
install.packages("arulesViz")
library(arules)
library(arulesViz)
muestra<-Matrix(c(1,1,0,1,1, 1,1,1,1,0, 1,1,0,1,0, 1,0,1,1,0, 1,1,0,0,0, 0,0,0,1,0),6,5,byrow=TRUE,dimnames=list(c("Suceso1","Suceso2","Suceso3","Suceso4","Suceso5","Suceso6"),c("Pan","Agua","Cafe","Leche","Naranjas")),sparse=TRUE)
muestrangCMatrix<-as(muestra,"nsparseMatrix")
transpmuestratrangCMatrix<-t(muestrangCMatrix)
transacciones<-as(transpmuestratrangCMatrix,"transactions")
summary(transacciones)
inspect(transacciones)
asociacionesap<-apriori(transacciones,parameter=list(support=0.5,confidence=0.8))
inspect(asociacionesap)
itemsets <- eclat(transacciones, parameter = list(supp = 0.5, maxlen = 5))
rules <- ruleInduction(itemsets, transacciones, confidence = 0.8)
inspect(rules)
#plot(asociacionesap,method = "graph")
plot(asociacionesap,method = "two-key plot", jitter=0)
install.packages("arules")
install.packages("arulesViz")
library(arules)
library(arulesViz)
muestra<-Matrix(c(1,1,0,1,1, 1,1,1,1,0, 1,1,0,1,0, 1,0,1,1,0, 1,1,0,0,0, 0,0,0,1,0),6,5,byrow=TRUE,dimnames=list(c("Suceso1","Suceso2","Suceso3","Suceso4","Suceso5","Suceso6"),c("Pan","Agua","Cafe","Leche","Naranjas")),sparse=TRUE)
muestrangCMatrix<-as(muestra,"nsparseMatrix")
transpmuestratrangCMatrix<-t(muestrangCMatrix)
transacciones<-as(transpmuestratrangCMatrix,"transactions")
summary(transacciones)
inspect(transacciones)
asociacionesap<-apriori(transacciones,parameter=list(support=0.5,confidence=0.8))
inspect(asociacionesap)
itemsets <- eclat(transacciones, parameter = list(supp = 0.5, maxlen = 5))
rules <- ruleInduction(itemsets, transacciones, confidence = 0.8)
inspect(rules)
#plot(asociacionesap,method = "graph")
plot(asociacionesap,method = "scatterplot") #: esparcir 
install.packages("arules")
install.packages("arulesViz")
library(arules)
library(arulesViz)
muestra<-Matrix(c(1,1,0,1,1, 1,1,1,1,0, 1,1,0,1,0, 1,0,1,1,0, 1,1,0,0,0, 0,0,0,1,0),6,5,byrow=TRUE,dimnames=list(c("Suceso1","Suceso2","Suceso3","Suceso4","Suceso5","Suceso6"),c("Pan","Agua","Cafe","Leche","Naranjas")),sparse=TRUE)
muestrangCMatrix<-as(muestra,"nsparseMatrix")
transpmuestratrangCMatrix<-t(muestrangCMatrix)
transacciones<-as(transpmuestratrangCMatrix,"transactions")
summary(transacciones)
inspect(transacciones)
asociacionesap<-apriori(transacciones,parameter=list(support=0.5,confidence=0.8))
inspect(asociacionesap)
itemsets <- eclat(transacciones, parameter = list(supp = 0.5, maxlen = 5))
rules <- ruleInduction(itemsets, transacciones, confidence = 0.8)
inspect(rules)
plot(asociacionesap,method = "graph")
plot(asociacionesap,method = "scatterplot")
Sweave("Memoria.Rnw")
tools::texi2pdf("Memoria.tex")
Sweave("Memoria.Rnw")
tools::texi2pdf("Memoria.tex")
Sweave("Memoria.Rnw")
tools::texi2pdf("Memoria.tex")
Sweave("Memoria.Rnw")
tools::texi2pdf("Memoria.tex")
install.packages("arules")
install.packages("arulesViz")
library(arules)
library(arulesViz)
muestra<-Matrix(c(1,1,0,1,1, 1,1,1,1,0, 1,1,0,1,0, 1,0,1,1,0, 1,1,0,0,0, 0,0,0,1,0),6,5,byrow=TRUE,dimnames=list(c("Suceso1","Suceso2","Suceso3","Suceso4","Suceso5","Suceso6"),c("Pan","Agua","Cafe","Leche","Naranjas")),sparse=TRUE)
muestrangCMatrix<-as(muestra,"nsparseMatrix")
transpmuestratrangCMatrix<-t(muestrangCMatrix)
transacciones<-as(transpmuestratrangCMatrix,"transactions")
summary(transacciones)
inspect(transacciones)
asociacionesap<-apriori(transacciones,parameter=list(support=0.5,confidence=0.8))
inspect(asociacionesap)
itemsets <- eclat(transacciones, parameter = list(supp = 0.5, maxlen = 5))
asociacionesec <- ruleInduction(itemsets, transacciones, confidence = 0.8)
inspect(rules)
plot(asociacionesap,method = "graph")
plot(asociacionesap,method = "scatterplot")
plot(asociacionesec,method = "graph")
plot(asociacionesec,method = "scatterplot")
Sweave("Memoria.Rnw")
tools::texi2pdf("Memoria.tex")
Sweave("Memoria.Rnw")
tools::texi2pdf("Memoria.tex")
Sweave("Memoria.Rnw")
tools::texi2pdf("Memoria.tex")
Sweave("Memoria.Rnw")
tools::texi2pdf("Memoria.tex")
Sweave("Memoria.Rnw")
tools::texi2pdf("Memoria.tex")
q()
install.packages("pastecs")
install.packages("xlsx")
install.packages("arulesViz")
library(arulesViz)
library(pastecs)
library(xlsx)
library(arules)
#Leer datos del excel
datosExcel<-Matrix(as.matrix(read.xlsx("ropa.xlsx", 1)),byrow=TRUE, sparse=TRUE )
datosExcelngCMatrix<-as(datosExcel,"nsparseMatrix")
trspDatosExcelngCMatrix<-t(datosExcelngCMatrix)
#Algoritmo a priori con excel
transaccionesExcel<-as(trspDatosExcelngCMatrix,"transactions")
summary(transaccionesExcel)
asociacionesExcel<-apriori(transaccionesExcel, parameter=list(support=0.5, confidence=0.8))
inspect(asociacionesExcel) #Para ver el resultado
#Leer datos de txt
datostxt<-Matrix(as.matrix(read.table("ropa.txt")),byrow=TRUE, sparse=TRUE )
datosTxtngCMatrix<-as(datostxt,"nsparseMatrix")
trspDatosTxtngCMatrix<-t(datosTxtngCMatrix)
#Algoritmo a priori con txt
transaccionesTxt<-as(trspDatosTxtngCMatrix,"transactions")
summary(transaccionesTxt)
asociacionesTxt<-apriori(transaccionesTxt, parameter=list(support=0.4, confidence=0.7))
inspect(asociacionesTxt) #Para ver el resultado
itemsets <- eclat(transaccionesExcel,
parameter = list(supp = 0.5, maxlen = 5))
## Create rules from the itemsets
rules <- ruleInduction(itemsets, transaccionesExcel, confidence = 0.8)
inspect(rules)
plot(asociacionesTxt,method = "graph")
plot(asociacionesTxt,method = "two-key plot")
plot(rules,method = "graph")
plot(rules,method = "two-key plot")
Sweave("Memoria.Rnw")
tools::texi2pdf("Memoria.tex")
Sweave("Memoria.Rnw")
tools::texi2pdf("Memoria.tex")
q()
Sweave("Memoria.Rnw")
install.packages("pastecs")
install.packages("xlsx")
install.packages("arulesViz")
library(arulesViz)
library(pastecs)
library(xlsx)
library(arules)
#Leer datos del excel
datosExcelT<-Matrix(as.matrix(read.xlsx("tecnologia.xlsx", 1)),byrow=TRUE, sparse=TRUE )
datosExcelngCMatrixT<-as(datosExcelT,"nsparseMatrix")
trspDatosExcelngCMatrixT<-t(datosExcelngCMatrixT)
trspDatosExcelngCMatrixT
#Algoritmo a priori con excel
transaccionesExcelT<-as(trspDatosExcelngCMatrixT,"transactions")
summary(transaccionesExcelT)
asociacionesExcelT<-apriori(transaccionesExcelT, parameter=list(support=0.3, confidence=0.5))
inspect(asociacionesExcelT) #Para ver el resultado
itemsetsT <- eclat(transaccionesExcelT,
parameter = list(supp = 0.3, maxlen = 5))
itemsetsT
rulesT <- ruleInduction(itemsetsT, transaccionesExcelT, confidence = 0.5)
inspect(rulesT)
plot(asociacionesExcelT,method = "graph")
plot(asociacionesExcelT,method = "two-key plot")
install.packages("pastecs")
install.packages("xlsx")
install.packages("arulesViz")
library(arulesViz)
library(pastecs)
library(xlsx)
library(arules)
#Leer datos del excel
datosExcelT<-Matrix(as.matrix(read.xlsx("tecnologia.xlsx", 1)),byrow=TRUE, sparse=TRUE )
datosExcelngCMatrixT<-as(datosExcelT,"nsparseMatrix")
trspDatosExcelngCMatrixT<-t(datosExcelngCMatrixT)
trspDatosExcelngCMatrixT
#Algoritmo a priori con excel
transaccionesExcelT<-as(trspDatosExcelngCMatrixT,"transactions")
summary(transaccionesExcelT)
asociacionesExcelT<-apriori(transaccionesExcelT, parameter=list(support=0.3, confidence=0.5))
inspect(asociacionesExcelT) #Para ver el resultado
itemsetsT <- eclat(transaccionesExcelT, parameter = list(supp = 0.3, maxlen = 5))
itemsetsT
rulesT <- ruleInduction(itemsetsT, transaccionesExcelT, confidence = 0.5)
inspect(rulesT)
plot(asociacionesExcelT,method = "graph")
plot(asociacionesExcelT,method = "scatterplot")
Sweave("Memoria.Rnw")
tools::texi2pdf("Memoria.tex")
Sweave("Memoria.Rnw")
tools::texi2pdf("Memoria.tex")
Sweave("Memoria.Rnw")
tools::texi2pdf("Memoria.tex")
tools::texi2pdf("Memoria.tex")
Sweave("Memoria.Rnw")
tools::texi2pdf("Memoria.tex")
Sweave("Memoria.Rnw")
tools::texi2pdf("Memoria.tex")
install.packages("pastecs")
install.packages("xlsx")
install.packages("arulesViz")
library(arulesViz)
library(pastecs)
library(xlsx)
library(arules)
#Leer datos del excel
datosExcelT<-Matrix(as.matrix(read.xlsx("tecnologia.xlsx", 1)),byrow=TRUE, sparse=TRUE )
datosExcelngCMatrixT<-as(datosExcelT,"nsparseMatrix")
trspDatosExcelngCMatrixT<-t(datosExcelngCMatrixT)
trspDatosExcelngCMatrixT
#Algoritmo a priori con excel
transaccionesExcelT<-as(trspDatosExcelngCMatrixT,"transactions")
summary(transaccionesExcelT)
asociacionesExcelT<-apriori(transaccionesExcelT, parameter=list(support=0.3, confidence=0.5))
inspect(asociacionesExcelT) #Para ver el resultado
itemsetsT <- eclat(transaccionesExcelT, parameter = list(supp = 0.3, maxlen = 5))
itemsetsT
rulesT <- ruleInduction(itemsetsT, transaccionesExcelT, confidence = 0.5)
inspect(rulesT)
plot(asociacionesExcelT,method = "graph")
plot(asociacionesExcelT,method = "scatterplot")
plot(rulesT,method = "graph")
plot(rulesT,method = "scatterplot")
Sweave("Memoria.Rnw")
tools::texi2pdf("Memoria.tex")
Sweave("Memoria.Rnw")
tools::texi2pdf("Memoria.tex")
q()
install.packages("pastecs")
install.packages("xlsx")
install.packages("arulesViz")
library(arulesViz)
library(pastecs)
library(xlsx)
library(arules)
#Leer datos del excel
datosExcelP<-Matrix(as.matrix(read.xlsx("papeleria.xlsx", 1)),byrow=TRUE, sparse=TRUE )
datosExcelngCMatrixP<-as(datosExcelP,"nsparseMatrix")
trspDatosExcelngCMatrixP<-t(datosExcelngCMatrixP)
trspDatosExcelngCMatrixP
#Algoritmo a priori con excel
transaccionesExcelP<-as(trspDatosExcelngCMatrixP,"transactions")
summary(transaccionesExcelP)
asociacionesExcelP<-apriori(transaccionesExcelP, parameter=list(support=0.5, confidence=0.8))
inspect(asociacionesExcelP) #Para ver el resultado
itemsetsP <- eclat(transaccionesExcelP,
parameter = list(supp = 0.5, maxlen = 5))
## Create rules from the itemsets
rulesP <- ruleInduction(itemsetsT, transaccionesExcelP, confidence = 0.8)
inspect(rulesP)
plot(asociacionesExcelP,method = "graph")
plot(asociacionesExcelP,method = "scatterplot")
plot(rulesP,method = "graph")
plot(rulesP,method = "scatterplot")
install.packages("pastecs")
install.packages("xlsx")
install.packages("arulesViz")
library(arulesViz)
library(pastecs)
library(xlsx)
library(arules)
#Leer datos del excel
datosExcelP<-Matrix(as.matrix(read.xlsx("papeleria.xlsx", 1)),byrow=TRUE, sparse=TRUE )
datosExcelngCMatrixP<-as(datosExcelP,"nsparseMatrix")
trspDatosExcelngCMatrixP<-t(datosExcelngCMatrixP)
trspDatosExcelngCMatrixP
#Algoritmo a priori con excel
transaccionesExcelP<-as(trspDatosExcelngCMatrixP,"transactions")
summary(transaccionesExcelP)
asociacionesExcelP<-apriori(transaccionesExcelP, parameter=list(support=0.5, confidence=0.8))
inspect(asociacionesExcelP) #Para ver el resultado
itemsetsP <- eclat(transaccionesExcelP,
parameter = list(supp = 0.5, maxlen = 5))
## Create rules from the itemsets
rulesP <- ruleInduction(itemsetsP, transaccionesExcelP, confidence = 0.8)
inspect(rulesP)
plot(asociacionesExcelP,method = "graph")
plot(asociacionesExcelP,method = "scatterplot")
plot(rulesP,method = "graph")
plot(rulesP,method = "scatterplot")
Sweave("Memoria.Rnw")
tools::texi2pdf("Memoria.tex")
Sweave("Memoria.Rnw")
tools::texi2pdf("Memoria.tex")
q()
install.packages("pastecs")
install.packages("xlsx")
install.packages("arulesViz")
library(arulesViz)
library(pastecs)
library(xlsx)
library(arules)
#Leer datos del excel
datosExcelT<-Matrix(as.matrix(read.xlsx("tecnologia.xlsx", 1)),byrow=TRUE, sparse=TRUE )
datosExcelngCMatrixT<-as(datosExcelT,"nsparseMatrix")
trspDatosExcelngCMatrixT<-t(datosExcelngCMatrixT)
trspDatosExcelngCMatrixT
#Algoritmo a priori con excel
transaccionesExcelT<-as(trspDatosExcelngCMatrixT,"transactions")
summary(transaccionesExcelT)
asociacionesExcelT<-apriori(transaccionesExcelT, parameter=list(support=0.3, confidence=0.5))
inspect(asociacionesExcelT) #Para ver el resultado
itemsetsT <- eclat(transaccionesExcelT, parameter = list(supp = 0.3, maxlen = 5))
itemsetsT
rulesT <- ruleInduction(itemsetsT, transaccionesExcelT, confidence = 0.5)
inspect(rulesT)
plot(asociacionesExcelT,method = "graph")
plot(asociacionesExcelT,method = "scatterplot")
plot(rulesT,method = "graph")
plot(rulesT,method = "scatterplot")
install.packages("pastecs")
install.packages("xlsx")
install.packages("arulesViz")
library(arulesViz)
library(pastecs)
library(xlsx)
library(arules)
#Leer datos del excel
datosExcelT<-Matrix(as.matrix(read.xlsx("tecnologia.xlsx", 1)),byrow=TRUE, sparse=TRUE )
datosExcelngCMatrixT<-as(datosExcelT,"nsparseMatrix")
trspDatosExcelngCMatrixT<-t(datosExcelngCMatrixT)
trspDatosExcelngCMatrixT
#Algoritmo a priori con excel
transaccionesExcelT<-as(trspDatosExcelngCMatrixT,"transactions")
summary(transaccionesExcelT)
asociacionesExcelT<-apriori(transaccionesExcelT, parameter=list(support=0.3, confidence=0.5))
inspect(asociacionesExcelT) #Para ver el resultado
itemsetsT <- eclat(transaccionesExcelT, parameter = list(supp = 0.3, maxlen = 5))
itemsetsT
rulesT <- ruleInduction(itemsetsT, transaccionesExcelT, confidence = 0.5)
inspect(rulesT)
plot(asociacionesExcelT,method = "graph")
plot(asociacionesExcelT,method = "scatterplot")
plot(rulesT,method = "graph")
plot(rulesT,method = "scatterplot")
install.packages("pastecs")
install.packages("xlsx")
install.packages("arulesViz")
library(arulesViz)
library(pastecs)
library(xlsx)
library(arules)
#Leer datos del excel
datosExcelT<-Matrix(as.matrix(read.xlsx("tecnologia.xlsx", 1)),byrow=TRUE, sparse=TRUE )
datosExcelngCMatrixT<-as(datosExcelT,"nsparseMatrix")
trspDatosExcelngCMatrixT<-t(datosExcelngCMatrixT)
trspDatosExcelngCMatrixT
#Algoritmo a priori con excel
transaccionesExcelT<-as(trspDatosExcelngCMatrixT,"transactions")
summary(transaccionesExcelT)
asociacionesExcelT<-apriori(transaccionesExcelT, parameter=list(support=0.3, confidence=0.5))
inspect(asociacionesExcelT) #Para ver el resultado
itemsetsT <- eclat(transaccionesExcelT, parameter = list(supp = 0.3, maxlen = 5))
itemsetsT
rulesT <- ruleInduction(itemsetsT, transaccionesExcelT, confidence = 0.5)
inspect(rulesT)
plot(asociacionesExcelT,method = "graph")
plot(asociacionesExcelT,method = "scatterplot")
plot(rulesT,method = "graph")
plot(rulesT,method = "scatterplot")
Sweave("Memoria.Rnw")
tools::texi2pdf("Memoria.tex")
Sweave("Memoria.Rnw")
tools::texi2pdf("Memoria.tex")
Sweave("Memoria.Rnw")
tools::texi2pdf("Memoria.tex")
install.packages("pastecs")
install.packages("xlsx")
install.packages("arulesViz")
library(arulesViz)
library(pastecs)
library(xlsx)
library(arules)
#Leer datos del excel
datosExcelP<-Matrix(as.matrix(read.xlsx("papeleria.xlsx", 1)),byrow=TRUE, sparse=TRUE )
datosExcelngCMatrixP<-as(datosExcelP,"nsparseMatrix")
trspDatosExcelngCMatrixP<-t(datosExcelngCMatrixP)
trspDatosExcelngCMatrixP
#Algoritmo a priori con excel
transaccionesExcelP<-as(trspDatosExcelngCMatrixP,"transactions")
summary(transaccionesExcelP)
asociacionesExcelP<-apriori(transaccionesExcelP, parameter=list(support=0.5, confidence=0.8))
inspect(asociacionesExcelP) #Para ver el resultado
itemsetsP <- eclat(transaccionesExcelP,
parameter = list(supp = 0.5, maxlen = 5))
## Create rules from the itemsets
rulesP <- ruleInduction(itemsetsP, transaccionesExcelP, confidence = 0.8)
inspect(rulesP)
plot(asociacionesExcelP,method = "graph")
plot(asociacionesExcelP,method = "scatterplot")
plot(rulesP,method = "graph")
plot(rulesP,method = "scatterplot")
Sweave("Memoria.Rnw")
tools::texi2pdf("Memoria.tex")
q()
